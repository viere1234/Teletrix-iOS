// This file was autogenerated by some hot garbage in the `uniffi` crate.
// Trust me, you don't want to mess with it!

#pragma once

#include <stdbool.h>
#include <stdint.h>

// The following structs are used to implement the lowest level
// of the FFI, and thus useful to multiple uniffied crates.
// We ensure they are declared exactly once, with a header guard, UNIFFI_SHARED_H.
#ifdef UNIFFI_SHARED_H
    // We also try to prevent mixing versions of shared uniffi header structs.
    // If you add anything to the #else block, you must increment the version suffix in UNIFFI_SHARED_HEADER_V4
    #ifndef UNIFFI_SHARED_HEADER_V4
        #error Combining helper code from multiple versions of uniffi is not supported
    #endif // ndef UNIFFI_SHARED_HEADER_V4
#else
#define UNIFFI_SHARED_H
#define UNIFFI_SHARED_HEADER_V4
// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V4 in this file.           ⚠️

typedef struct RustBuffer
{
    int32_t capacity;
    int32_t len;
    uint8_t *_Nullable data;
} RustBuffer;

typedef int32_t (*ForeignCallback)(uint64_t, int32_t, const uint8_t *_Nonnull, int32_t, RustBuffer *_Nonnull);

typedef struct ForeignBytes
{
    int32_t len;
    const uint8_t *_Nullable data;
} ForeignBytes;

// `RustFuture` is an opaque type.
typedef struct RustFuture RustFuture;

typedef void rust_future_waker_environment_t;
typedef void (*rust_future_waker_t)(rust_future_waker_environment_t*_Nullable);

// Error definitions
typedef struct RustCallStatus {
    int8_t code;
    RustBuffer errorBuf;
} RustCallStatus;

// ⚠️ Attention: If you change this #else block (ending in `#endif // def UNIFFI_SHARED_H`) you *must* ⚠️
// ⚠️ increment the version suffix in all instances of UNIFFI_SHARED_HEADER_V4 in this file.           ⚠️
#endif // def UNIFFI_SHARED_H

void ffi_matrix_sdk_crypto_ffi_f611_Sas_object_free(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_Sas_other_user_id(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_Sas_other_device_id(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_Sas_flow_id(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_Sas_room_id(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

int8_t matrix_sdk_crypto_ffi_f611_Sas_we_started(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

int8_t matrix_sdk_crypto_ffi_f611_Sas_is_done(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_Sas_accept(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_Sas_confirm(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_Sas_cancel(
    void*_Nonnull ptr,RustBuffer cancel_code,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_Sas_get_emoji_indices(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_Sas_get_decimals(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

void matrix_sdk_crypto_ffi_f611_Sas_set_changes_listener(
    void*_Nonnull ptr,uint64_t listener,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_Sas_state(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

void ffi_matrix_sdk_crypto_ffi_f611_QrCode_object_free(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_QrCode_other_user_id(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_QrCode_other_device_id(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_QrCode_flow_id(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_QrCode_room_id(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

int8_t matrix_sdk_crypto_ffi_f611_QrCode_we_started(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

int8_t matrix_sdk_crypto_ffi_f611_QrCode_is_done(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

int8_t matrix_sdk_crypto_ffi_f611_QrCode_is_cancelled(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_QrCode_cancel_info(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

int8_t matrix_sdk_crypto_ffi_f611_QrCode_reciprocated(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

int8_t matrix_sdk_crypto_ffi_f611_QrCode_has_been_scanned(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_QrCode_confirm(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_QrCode_cancel(
    void*_Nonnull ptr,RustBuffer cancel_code,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_QrCode_generate_qr_code(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

void matrix_sdk_crypto_ffi_f611_QrCode_set_changes_listener(
    void*_Nonnull ptr,uint64_t listener,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_QrCode_state(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

void ffi_matrix_sdk_crypto_ffi_f611_VerificationRequest_object_free(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_VerificationRequest_other_user_id(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_VerificationRequest_other_device_id(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_VerificationRequest_flow_id(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_VerificationRequest_room_id(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

int8_t matrix_sdk_crypto_ffi_f611_VerificationRequest_we_started(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

int8_t matrix_sdk_crypto_ffi_f611_VerificationRequest_is_ready(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

int8_t matrix_sdk_crypto_ffi_f611_VerificationRequest_is_done(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

int8_t matrix_sdk_crypto_ffi_f611_VerificationRequest_is_passive(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

int8_t matrix_sdk_crypto_ffi_f611_VerificationRequest_is_cancelled(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_VerificationRequest_cancel_info(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_VerificationRequest_their_supported_methods(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_VerificationRequest_our_supported_methods(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_VerificationRequest_accept(
    void*_Nonnull ptr,RustBuffer methods,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_VerificationRequest_start_sas_verification(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_VerificationRequest_start_qr_verification(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_VerificationRequest_scan_qr_code(
    void*_Nonnull ptr,RustBuffer data,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_VerificationRequest_cancel(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

void matrix_sdk_crypto_ffi_f611_VerificationRequest_set_changes_listener(
    void*_Nonnull ptr,uint64_t listener,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_VerificationRequest_state(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

void ffi_matrix_sdk_crypto_ffi_f611_Verification_object_free(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_Verification_as_qr(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_Verification_as_sas(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

void ffi_matrix_sdk_crypto_ffi_f611_OlmMachine_object_free(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

void*_Nonnull matrix_sdk_crypto_ffi_f611_OlmMachine_new(
    RustBuffer user_id,RustBuffer device_id,RustBuffer path,RustBuffer passphrase,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_OlmMachine_outgoing_requests(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

void matrix_sdk_crypto_ffi_f611_OlmMachine_mark_request_as_sent(
    void*_Nonnull ptr,RustBuffer request_id,RustBuffer request_type,RustBuffer response,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_OlmMachine_get_identity(
    void*_Nonnull ptr,RustBuffer user_id,uint32_t timeout,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_OlmMachine_verify_identity(
    void*_Nonnull ptr,RustBuffer user_id,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_OlmMachine_get_device(
    void*_Nonnull ptr,RustBuffer user_id,RustBuffer device_id,uint32_t timeout,
    RustCallStatus *_Nonnull out_status
);

void matrix_sdk_crypto_ffi_f611_OlmMachine_set_local_trust(
    void*_Nonnull ptr,RustBuffer user_id,RustBuffer device_id,RustBuffer trust_state,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_OlmMachine_verify_device(
    void*_Nonnull ptr,RustBuffer user_id,RustBuffer device_id,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_OlmMachine_get_user_devices(
    void*_Nonnull ptr,RustBuffer user_id,uint32_t timeout,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_OlmMachine_import_room_keys(
    void*_Nonnull ptr,RustBuffer keys,RustBuffer passphrase,uint64_t progress_listener,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_OlmMachine_import_decrypted_room_keys(
    void*_Nonnull ptr,RustBuffer keys,uint64_t progress_listener,
    RustCallStatus *_Nonnull out_status
);

int8_t matrix_sdk_crypto_ffi_f611_OlmMachine_is_identity_verified(
    void*_Nonnull ptr,RustBuffer user_id,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_OlmMachine_sign(
    void*_Nonnull ptr,RustBuffer message,
    RustCallStatus *_Nonnull out_status
);

RustBuffer matrix_sdk_crypto_ffi_f611_OlmMachine_verify_backup(
    void*_Nonnull ptr,RustBuffer auth_data,
    RustCallStatus *_Nonnull out_status
);

int8_t _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_backup_enabled_18b9(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_backup_room_keys_e0d8(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_bootstrap_cross_signing_379(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_cross_signing_status_e4ae(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_decrypt_room_event_4f4f(
    void*_Nonnull ptr,RustBuffer event,RustBuffer room_id,int8_t handle_verification_events,int8_t strict_shields,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_device_id_efde(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

void _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_disable_backup_ac9f(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

void _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_discard_room_key_ac56(
    void*_Nonnull ptr,RustBuffer room_id,
    RustCallStatus *_Nonnull out_status
);

void _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_enable_backup_v1_a0a2(
    void*_Nonnull ptr,RustBuffer key,RustBuffer version,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_encrypt_63b1(
    void*_Nonnull ptr,RustBuffer room_id,RustBuffer event_type,RustBuffer content,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_export_cross_signing_keys_47bf(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_export_room_keys_937c(
    void*_Nonnull ptr,RustBuffer passphrase,int32_t rounds,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_get_backup_keys_d873(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_get_missing_sessions_e0ed(
    void*_Nonnull ptr,RustBuffer users,
    RustCallStatus *_Nonnull out_status
);

int8_t _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_get_only_allow_trusted_devices_4c8(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_get_room_settings_2ef3(
    void*_Nonnull ptr,RustBuffer room_id,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_get_verification_18fa(
    void*_Nonnull ptr,RustBuffer user_id,RustBuffer flow_id,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_get_verification_request_a81d(
    void*_Nonnull ptr,RustBuffer user_id,RustBuffer flow_id,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_get_verification_requests_9571(
    void*_Nonnull ptr,RustBuffer user_id,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_identity_keys_705c(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

void _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_import_cross_signing_keys_7223(
    void*_Nonnull ptr,RustBuffer export,
    RustCallStatus *_Nonnull out_status
);

int8_t _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_is_user_tracked_fa20(
    void*_Nonnull ptr,RustBuffer user_id,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_receive_sync_changes_a0bf(
    void*_Nonnull ptr,RustBuffer events,RustBuffer device_changes,RustBuffer key_counts,RustBuffer unused_fallback_keys,
    RustCallStatus *_Nonnull out_status
);

void _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_receive_unencrypted_verification_event_1ccd(
    void*_Nonnull ptr,RustBuffer event,RustBuffer room_id,
    RustCallStatus *_Nonnull out_status
);

void _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_receive_verification_event_8215(
    void*_Nonnull ptr,RustBuffer event,RustBuffer room_id,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_request_room_key_85db(
    void*_Nonnull ptr,RustBuffer event,RustBuffer room_id,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_request_self_verification_8b29(
    void*_Nonnull ptr,RustBuffer methods,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_request_verification_32bd(
    void*_Nonnull ptr,RustBuffer user_id,RustBuffer room_id,RustBuffer event_id,RustBuffer methods,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_request_verification_with_device_11bb(
    void*_Nonnull ptr,RustBuffer user_id,RustBuffer device_id,RustBuffer methods,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_room_key_counts_de1b(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

void _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_save_recovery_key_c6c9(
    void*_Nonnull ptr,RustBuffer key,RustBuffer version,
    RustCallStatus *_Nonnull out_status
);

void _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_set_only_allow_trusted_devices_279e(
    void*_Nonnull ptr,int8_t only_allow_trusted_devices,
    RustCallStatus *_Nonnull out_status
);

void _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_set_room_algorithm_6f69(
    void*_Nonnull ptr,RustBuffer room_id,RustBuffer algorithm,
    RustCallStatus *_Nonnull out_status
);

void _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_set_room_only_allow_trusted_devices_adfe(
    void*_Nonnull ptr,RustBuffer room_id,int8_t only_allow_trusted_devices,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_share_room_key_11c0(
    void*_Nonnull ptr,RustBuffer room_id,RustBuffer users,RustBuffer settings,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_start_sas_with_device_1aae(
    void*_Nonnull ptr,RustBuffer user_id,RustBuffer device_id,
    RustCallStatus *_Nonnull out_status
);

void _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_update_tracked_users_408f(
    void*_Nonnull ptr,RustBuffer users,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_user_id_4573(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_OlmMachine_verification_request_content_7099(
    void*_Nonnull ptr,RustBuffer user_id,RustBuffer methods,
    RustCallStatus *_Nonnull out_status
);

void ffi_matrix_sdk_crypto_ffi_f611_BackupRecoveryKey_object_free(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

void*_Nonnull matrix_sdk_crypto_ffi_f611_BackupRecoveryKey_new(
    
    RustCallStatus *_Nonnull out_status
);

void*_Nonnull matrix_sdk_crypto_ffi_f611_BackupRecoveryKey_from_passphrase(
    RustBuffer passphrase,RustBuffer salt,int32_t rounds,
    RustCallStatus *_Nonnull out_status
);

void*_Nonnull matrix_sdk_crypto_ffi_f611_BackupRecoveryKey_new_from_passphrase(
    RustBuffer passphrase,
    RustCallStatus *_Nonnull out_status
);

void*_Nonnull matrix_sdk_crypto_ffi_f611_BackupRecoveryKey_from_base64(
    RustBuffer key,
    RustCallStatus *_Nonnull out_status
);

void*_Nonnull matrix_sdk_crypto_ffi_f611_BackupRecoveryKey_from_base58(
    RustBuffer key,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_BackupRecoveryKey_decrypt_v1_9754(
    void*_Nonnull ptr,RustBuffer ephemeral_key,RustBuffer mac,RustBuffer ciphertext,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_BackupRecoveryKey_megolm_v1_public_key_1d77(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_BackupRecoveryKey_to_base58_3fbd(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_BackupRecoveryKey_to_base64_8861(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

void _uniffi_matrix_sdk_crypto_ffi_object_free_BackupKeys_7ad1(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_impl_BackupKeys_backup_version_6a86(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

void*_Nonnull _uniffi_matrix_sdk_crypto_ffi_impl_BackupKeys_recovery_key_2567(
    void*_Nonnull ptr,
    RustCallStatus *_Nonnull out_status
);

void ffi_matrix_sdk_crypto_ffi_f611_Logger_init_callback(
    ForeignCallback _Nonnull callback_stub,
    RustCallStatus *_Nonnull out_status
);

void ffi_matrix_sdk_crypto_ffi_f611_ProgressListener_init_callback(
    ForeignCallback _Nonnull callback_stub,
    RustCallStatus *_Nonnull out_status
);

void ffi_matrix_sdk_crypto_ffi_f611_SasListener_init_callback(
    ForeignCallback _Nonnull callback_stub,
    RustCallStatus *_Nonnull out_status
);

void ffi_matrix_sdk_crypto_ffi_f611_QrCodeListener_init_callback(
    ForeignCallback _Nonnull callback_stub,
    RustCallStatus *_Nonnull out_status
);

void ffi_matrix_sdk_crypto_ffi_f611_VerificationRequestListener_init_callback(
    ForeignCallback _Nonnull callback_stub,
    RustCallStatus *_Nonnull out_status
);

void matrix_sdk_crypto_ffi_f611_set_logger(
    uint64_t logger,
    RustCallStatus *_Nonnull out_status
);

void matrix_sdk_crypto_ffi_f611_migrate(
    RustBuffer data,RustBuffer path,RustBuffer passphrase,uint64_t progress_listener,
    RustCallStatus *_Nonnull out_status
);

void matrix_sdk_crypto_ffi_f611_migrate_sessions(
    RustBuffer data,RustBuffer path,RustBuffer passphrase,uint64_t progress_listener,
    RustCallStatus *_Nonnull out_status
);

void matrix_sdk_crypto_ffi_f611_migrate_room_settings(
    RustBuffer room_settings,RustBuffer path,RustBuffer passphrase,
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_version_364(
    
    RustCallStatus *_Nonnull out_status
);

RustBuffer _uniffi_matrix_sdk_crypto_ffi_vodozemac_version_48d4(
    
    RustCallStatus *_Nonnull out_status
);

RustBuffer ffi_matrix_sdk_crypto_ffi_f611_rustbuffer_alloc(
    int32_t size,
    RustCallStatus *_Nonnull out_status
);

RustBuffer ffi_matrix_sdk_crypto_ffi_f611_rustbuffer_from_bytes(
    ForeignBytes bytes,
    RustCallStatus *_Nonnull out_status
);

void ffi_matrix_sdk_crypto_ffi_f611_rustbuffer_free(
    RustBuffer buf,
    RustCallStatus *_Nonnull out_status
);

RustBuffer ffi_matrix_sdk_crypto_ffi_f611_rustbuffer_reserve(
    RustBuffer buf,int32_t additional,
    RustCallStatus *_Nonnull out_status
);